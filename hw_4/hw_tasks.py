# 1. Вычислить число π c заданной точностью

# Положить n=0, S1 = 0 и S2 = 0; ( начальные установки )
# Увеличить n на 1; ( n становится нечетным )
# Вычислить S1 = S2 + 4/(2n-1); (S1 - есть верхняя оценка )
# Увеличить n на 1; ( n становится четным )
# Вычислить S2 = S1 - 4/(2n-1); (S2 - есть нижняя оценка)
# Если S1 - S2 >= 10^(-5) перейти к шагу 2;
# ( нужная точность еще не достигнута )
# Напечатать результат (S1 + S2) / 2
# https://www.cyberforum.ru/cpp-beginners/thread33902.html?ysclid=l911q78zm1442546781
# https://translated.turbopages.org/proxy_u/en-ru.ru.d986ea23-6342fae4-e987abd4-74722d776562/https/www.wikihow.com/Write-a-Python-Program-to-Calculate-Pi
def first_task(acc):
    n = 0
    while(n < acc):
        s_one = 0
        s_two = 0
        n += 1
        s_one = s_two + 4 // (2 * n - 1)
        n += 1
        s_two = s_one + 4 // (2 * n - 1)
        print((s_one + s_two) // 2, end='|')





# 2 Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.

def second_task(N):
    sm = []
    for i in range(2, N):
        while(N % i) == 0:
            sm.append(i)
            N //= i

    print(sm)

# 3 Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов
# исходной последовательности.
def third_task():
    sequence = [2, 4, 4, 6, 7, 2, 9, 0, 9, 5, 3, 6, 7, 4, 1]
    unique_els = []
    for i in sequence:
        count = 0
        if(count < 2):
            for j in sequence:
                if i == j:
                    count += 1
        if count < 2:
            unique_els.append(i)
    print(unique_els)


# 4 Задана натуральная степень k. Сформировать случайным образом список коэффициентов
# (значения от 0 до 100) многочлена и записать в файл многочлен степени k.

# 5 Даны два файла, в каждом из которых находится запись многочлена. Задача - сформировать файл, содержащий сумму
# многочленов. Коэффициенты могут быть как положительными, так и отрицательными. Степени многочленов могут отличать
